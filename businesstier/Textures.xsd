<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Textures" targetNamespace="http://tempuri.org/Textures.xsd" xmlns:mstns="http://tempuri.org/Textures.xsd" xmlns="http://tempuri.org/Textures.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="novaConnectionString2" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="novaConnectionString2 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BusinessTier.Properties.Settings.GlobalReference.Default.novaConnectionString2" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="texturesTableAdapter" GeneratorDataComponentClassName="texturesTableAdapter" Name="textures" UserDataComponentName="texturesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="novaConnectionString2 (Settings)" DbObjectName="nova.dbo.textures" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[textures] WHERE (([texture_id] = @Original_texture_id) AND ([texture_desc] = @Original_texture_desc) AND ([texture_sort] = @Original_texture_sort) AND ([filter_id] = @Original_filter_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_texture_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="texture_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_texture_desc" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="texture_desc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_texture_sort" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="texture_sort" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_filter_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="filter_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[textures] ([texture_desc], [texture_sort], [filter_id]) VALUES (@texture_desc, @texture_sort, @filter_id);
SELECT texture_id, texture_desc, texture_sort, filter_id FROM textures WHERE (texture_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@texture_desc" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="texture_desc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@texture_sort" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="texture_sort" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@filter_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="filter_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT texture_id, texture_desc, texture_sort, filter_id FROM dbo.textures</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[textures] SET [texture_desc] = @texture_desc, [texture_sort] = @texture_sort, [filter_id] = @filter_id WHERE (([texture_id] = @Original_texture_id) AND ([texture_desc] = @Original_texture_desc) AND ([texture_sort] = @Original_texture_sort) AND ([filter_id] = @Original_filter_id));
SELECT texture_id, texture_desc, texture_sort, filter_id FROM textures WHERE (texture_id = @texture_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@texture_desc" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="texture_desc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@texture_sort" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="texture_sort" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@filter_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="filter_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_texture_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="texture_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_texture_desc" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="texture_desc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_texture_sort" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="texture_sort" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_filter_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="filter_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="texture_id" ColumnName="texture_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@texture_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="texture_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="texture_id" DataSetColumn="texture_id" />
              <Mapping SourceColumn="texture_desc" DataSetColumn="texture_desc" />
              <Mapping SourceColumn="texture_sort" DataSetColumn="texture_sort" />
              <Mapping SourceColumn="filter_id" DataSetColumn="filter_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Textures" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="Textures" msprop:Generator_UserDSName="Textures" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="textures" msprop:Generator_UserTableName="textures" msprop:Generator_RowDeletedName="texturesRowDeleted" msprop:Generator_TableClassName="texturesDataTable" msprop:Generator_RowChangedName="texturesRowChanged" msprop:Generator_RowClassName="texturesRow" msprop:Generator_RowChangingName="texturesRowChanging" msprop:Generator_RowEvArgName="texturesRowChangeEvent" msprop:Generator_RowEvHandlerName="texturesRowChangeEventHandler" msprop:Generator_TablePropName="textures" msprop:Generator_TableVarName="tabletextures" msprop:Generator_RowDeletingName="texturesRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="texture_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="texture_id" msprop:Generator_ColumnPropNameInRow="texture_id" msprop:Generator_ColumnVarNameInTable="columntexture_id" msprop:Generator_ColumnPropNameInTable="texture_idColumn" type="xs:int" />
              <xs:element name="texture_desc" msprop:Generator_UserColumnName="texture_desc" msprop:Generator_ColumnPropNameInRow="texture_desc" msprop:Generator_ColumnVarNameInTable="columntexture_desc" msprop:Generator_ColumnPropNameInTable="texture_descColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="texture_sort" msprop:Generator_UserColumnName="texture_sort" msprop:Generator_ColumnPropNameInRow="texture_sort" msprop:Generator_ColumnVarNameInTable="columntexture_sort" msprop:Generator_ColumnPropNameInTable="texture_sortColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="filter_id" msprop:Generator_UserColumnName="filter_id" msprop:Generator_ColumnPropNameInRow="filter_id" msprop:Generator_ColumnVarNameInTable="columnfilter_id" msprop:Generator_ColumnPropNameInTable="filter_idColumn" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:textures" />
      <xs:field xpath="mstns:texture_id" />
    </xs:unique>
  </xs:element>
</xs:schema>