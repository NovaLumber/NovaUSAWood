//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BusinessTier.DataAccessLayer {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Species")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Species : global::System.Data.DataSet {
        
        private speciesDataTable tablespecies;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Species() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected Species(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["species"] != null)) {
                    base.Tables.Add(new speciesDataTable(ds.Tables["species"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public speciesDataTable species {
            get {
                return this.tablespecies;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Species cln = ((Species)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["species"] != null)) {
                    base.Tables.Add(new speciesDataTable(ds.Tables["species"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespecies = ((speciesDataTable)(base.Tables["species"]));
            if ((initTable == true)) {
                if ((this.tablespecies != null)) {
                    this.tablespecies.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Species";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Species.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespecies = new speciesDataTable();
            base.Tables.Add(this.tablespecies);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespecies() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Species ds = new Species();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void speciesRowChangeEventHandler(object sender, speciesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class speciesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnspecies_code;
            
            private global::System.Data.DataColumn columnspecies_description;
            
            private global::System.Data.DataColumn columnspecies_abbrev;
            
            private global::System.Data.DataColumn columnxtab_include;
            
            private global::System.Data.DataColumn columnhardness;
            
            private global::System.Data.DataColumn columnmor;
            
            private global::System.Data.DataColumn columnmoe;
            
            private global::System.Data.DataColumn columndensity;
            
            private global::System.Data.DataColumn columnother_names;
            
            private global::System.Data.DataColumn columnis_wood;
            
            private global::System.Data.DataColumn columnweb_desc;
            
            private global::System.Data.DataColumn columnphoto_link;
            
            private global::System.Data.DataColumn columntang_shrink;
            
            private global::System.Data.DataColumn columnrad_shrink;
            
            private global::System.Data.DataColumn columnFilterEntry_id;
            
            private global::System.Data.DataColumn columnabout;
            
            private global::System.Data.DataColumn columntree;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columntexture;
            
            private global::System.Data.DataColumn columngrain;
            
            private global::System.Data.DataColumn columnluster;
            
            private global::System.Data.DataColumn columndrying;
            
            private global::System.Data.DataColumn columnworking;
            
            private global::System.Data.DataColumn columndurability;
            
            private global::System.Data.DataColumn columnapplications;
            
            private global::System.Data.DataColumn columnphotosensitive;
            
            private global::System.Data.DataColumn columndistribution;
            
            private global::System.Data.DataColumn columnfamily;
            
            private global::System.Data.DataColumn columnprod_id;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columntitle;
            
            private global::System.Data.DataColumn columnis_popular;
            
            private global::System.Data.DataColumn columnprice_card_description;
            
            private global::System.Data.DataColumn columnmarketing_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public speciesDataTable() {
                this.TableName = "species";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal speciesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected speciesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn species_codeColumn {
                get {
                    return this.columnspecies_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn species_descriptionColumn {
                get {
                    return this.columnspecies_description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn species_abbrevColumn {
                get {
                    return this.columnspecies_abbrev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xtab_includeColumn {
                get {
                    return this.columnxtab_include;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hardnessColumn {
                get {
                    return this.columnhardness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn morColumn {
                get {
                    return this.columnmor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moeColumn {
                get {
                    return this.columnmoe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn densityColumn {
                get {
                    return this.columndensity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn other_namesColumn {
                get {
                    return this.columnother_names;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn is_woodColumn {
                get {
                    return this.columnis_wood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn web_descColumn {
                get {
                    return this.columnweb_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn photo_linkColumn {
                get {
                    return this.columnphoto_link;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tang_shrinkColumn {
                get {
                    return this.columntang_shrink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rad_shrinkColumn {
                get {
                    return this.columnrad_shrink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FilterEntry_idColumn {
                get {
                    return this.columnFilterEntry_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn aboutColumn {
                get {
                    return this.columnabout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treeColumn {
                get {
                    return this.columntree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn textureColumn {
                get {
                    return this.columntexture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn grainColumn {
                get {
                    return this.columngrain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lusterColumn {
                get {
                    return this.columnluster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dryingColumn {
                get {
                    return this.columndrying;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn workingColumn {
                get {
                    return this.columnworking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn durabilityColumn {
                get {
                    return this.columndurability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn applicationsColumn {
                get {
                    return this.columnapplications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn photosensitiveColumn {
                get {
                    return this.columnphotosensitive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn distributionColumn {
                get {
                    return this.columndistribution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn familyColumn {
                get {
                    return this.columnfamily;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prod_idColumn {
                get {
                    return this.columnprod_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn is_popularColumn {
                get {
                    return this.columnis_popular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn price_card_descriptionColumn {
                get {
                    return this.columnprice_card_description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn marketing_nameColumn {
                get {
                    return this.columnmarketing_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public speciesRow this[int index] {
                get {
                    return ((speciesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event speciesRowChangeEventHandler speciesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event speciesRowChangeEventHandler speciesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event speciesRowChangeEventHandler speciesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event speciesRowChangeEventHandler speciesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspeciesRow(speciesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public speciesRow AddspeciesRow(
                        string species_code, 
                        string species_description, 
                        string species_abbrev, 
                        int xtab_include, 
                        double hardness, 
                        double mor, 
                        double moe, 
                        double density, 
                        string other_names, 
                        int is_wood, 
                        string web_desc, 
                        string photo_link, 
                        double tang_shrink, 
                        double rad_shrink, 
                        int FilterEntry_id, 
                        string about, 
                        string tree, 
                        string color, 
                        string texture, 
                        string grain, 
                        string luster, 
                        string drying, 
                        string working, 
                        string durability, 
                        string applications, 
                        string photosensitive, 
                        string distribution, 
                        string family, 
                        int prod_id, 
                        string url, 
                        string title, 
                        int is_popular, 
                        string price_card_description, 
                        string marketing_name) {
                speciesRow rowspeciesRow = ((speciesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        species_code,
                        species_description,
                        species_abbrev,
                        xtab_include,
                        hardness,
                        mor,
                        moe,
                        density,
                        other_names,
                        is_wood,
                        web_desc,
                        photo_link,
                        tang_shrink,
                        rad_shrink,
                        FilterEntry_id,
                        about,
                        tree,
                        color,
                        texture,
                        grain,
                        luster,
                        drying,
                        working,
                        durability,
                        applications,
                        photosensitive,
                        distribution,
                        family,
                        prod_id,
                        url,
                        title,
                        is_popular,
                        price_card_description,
                        marketing_name};
                rowspeciesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspeciesRow);
                return rowspeciesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public speciesRow FindByspecies_code(string species_code) {
                return ((speciesRow)(this.Rows.Find(new object[] {
                            species_code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                speciesDataTable cln = ((speciesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new speciesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnspecies_code = base.Columns["species_code"];
                this.columnspecies_description = base.Columns["species_description"];
                this.columnspecies_abbrev = base.Columns["species_abbrev"];
                this.columnxtab_include = base.Columns["xtab_include"];
                this.columnhardness = base.Columns["hardness"];
                this.columnmor = base.Columns["mor"];
                this.columnmoe = base.Columns["moe"];
                this.columndensity = base.Columns["density"];
                this.columnother_names = base.Columns["other_names"];
                this.columnis_wood = base.Columns["is_wood"];
                this.columnweb_desc = base.Columns["web_desc"];
                this.columnphoto_link = base.Columns["photo_link"];
                this.columntang_shrink = base.Columns["tang_shrink"];
                this.columnrad_shrink = base.Columns["rad_shrink"];
                this.columnFilterEntry_id = base.Columns["FilterEntry_id"];
                this.columnabout = base.Columns["about"];
                this.columntree = base.Columns["tree"];
                this.columncolor = base.Columns["color"];
                this.columntexture = base.Columns["texture"];
                this.columngrain = base.Columns["grain"];
                this.columnluster = base.Columns["luster"];
                this.columndrying = base.Columns["drying"];
                this.columnworking = base.Columns["working"];
                this.columndurability = base.Columns["durability"];
                this.columnapplications = base.Columns["applications"];
                this.columnphotosensitive = base.Columns["photosensitive"];
                this.columndistribution = base.Columns["distribution"];
                this.columnfamily = base.Columns["family"];
                this.columnprod_id = base.Columns["prod_id"];
                this.columnurl = base.Columns["url"];
                this.columntitle = base.Columns["title"];
                this.columnis_popular = base.Columns["is_popular"];
                this.columnprice_card_description = base.Columns["price_card_description"];
                this.columnmarketing_name = base.Columns["marketing_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnspecies_code = new global::System.Data.DataColumn("species_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecies_code);
                this.columnspecies_description = new global::System.Data.DataColumn("species_description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecies_description);
                this.columnspecies_abbrev = new global::System.Data.DataColumn("species_abbrev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecies_abbrev);
                this.columnxtab_include = new global::System.Data.DataColumn("xtab_include", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxtab_include);
                this.columnhardness = new global::System.Data.DataColumn("hardness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhardness);
                this.columnmor = new global::System.Data.DataColumn("mor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmor);
                this.columnmoe = new global::System.Data.DataColumn("moe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmoe);
                this.columndensity = new global::System.Data.DataColumn("density", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndensity);
                this.columnother_names = new global::System.Data.DataColumn("other_names", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnother_names);
                this.columnis_wood = new global::System.Data.DataColumn("is_wood", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_wood);
                this.columnweb_desc = new global::System.Data.DataColumn("web_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweb_desc);
                this.columnphoto_link = new global::System.Data.DataColumn("photo_link", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto_link);
                this.columntang_shrink = new global::System.Data.DataColumn("tang_shrink", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntang_shrink);
                this.columnrad_shrink = new global::System.Data.DataColumn("rad_shrink", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrad_shrink);
                this.columnFilterEntry_id = new global::System.Data.DataColumn("FilterEntry_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterEntry_id);
                this.columnabout = new global::System.Data.DataColumn("about", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabout);
                this.columntree = new global::System.Data.DataColumn("tree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntree);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columntexture = new global::System.Data.DataColumn("texture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntexture);
                this.columngrain = new global::System.Data.DataColumn("grain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrain);
                this.columnluster = new global::System.Data.DataColumn("luster", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnluster);
                this.columndrying = new global::System.Data.DataColumn("drying", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrying);
                this.columnworking = new global::System.Data.DataColumn("working", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworking);
                this.columndurability = new global::System.Data.DataColumn("durability", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndurability);
                this.columnapplications = new global::System.Data.DataColumn("applications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplications);
                this.columnphotosensitive = new global::System.Data.DataColumn("photosensitive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphotosensitive);
                this.columndistribution = new global::System.Data.DataColumn("distribution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndistribution);
                this.columnfamily = new global::System.Data.DataColumn("family", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily);
                this.columnprod_id = new global::System.Data.DataColumn("prod_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprod_id);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columntitle = new global::System.Data.DataColumn("title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnis_popular = new global::System.Data.DataColumn("is_popular", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_popular);
                this.columnprice_card_description = new global::System.Data.DataColumn("price_card_description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_card_description);
                this.columnmarketing_name = new global::System.Data.DataColumn("marketing_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarketing_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnspecies_code}, true));
                this.columnspecies_code.AllowDBNull = false;
                this.columnspecies_code.Unique = true;
                this.columnspecies_code.MaxLength = 2;
                this.columnspecies_description.AllowDBNull = false;
                this.columnspecies_description.MaxLength = 32;
                this.columnspecies_abbrev.MaxLength = 16;
                this.columnxtab_include.AllowDBNull = false;
                this.columnhardness.AllowDBNull = false;
                this.columnmor.AllowDBNull = false;
                this.columnmoe.AllowDBNull = false;
                this.columndensity.AllowDBNull = false;
                this.columnother_names.AllowDBNull = false;
                this.columnother_names.MaxLength = 2147483647;
                this.columnis_wood.AllowDBNull = false;
                this.columnweb_desc.AllowDBNull = false;
                this.columnweb_desc.MaxLength = 2147483647;
                this.columnphoto_link.AllowDBNull = false;
                this.columnphoto_link.MaxLength = 255;
                this.columntang_shrink.AllowDBNull = false;
                this.columnrad_shrink.AllowDBNull = false;
                this.columnFilterEntry_id.AllowDBNull = false;
                this.columnabout.AllowDBNull = false;
                this.columnabout.MaxLength = 2147483647;
                this.columntree.AllowDBNull = false;
                this.columntree.MaxLength = 2147483647;
                this.columncolor.AllowDBNull = false;
                this.columncolor.MaxLength = 2147483647;
                this.columntexture.AllowDBNull = false;
                this.columntexture.MaxLength = 2147483647;
                this.columngrain.AllowDBNull = false;
                this.columngrain.MaxLength = 2147483647;
                this.columnluster.AllowDBNull = false;
                this.columnluster.MaxLength = 2147483647;
                this.columndrying.AllowDBNull = false;
                this.columndrying.MaxLength = 2147483647;
                this.columnworking.AllowDBNull = false;
                this.columnworking.MaxLength = 2147483647;
                this.columndurability.AllowDBNull = false;
                this.columndurability.MaxLength = 2147483647;
                this.columnapplications.AllowDBNull = false;
                this.columnapplications.MaxLength = 2147483647;
                this.columnphotosensitive.AllowDBNull = false;
                this.columnphotosensitive.MaxLength = 2147483647;
                this.columndistribution.AllowDBNull = false;
                this.columndistribution.MaxLength = 2147483647;
                this.columnfamily.AllowDBNull = false;
                this.columnfamily.MaxLength = 50;
                this.columnprod_id.AllowDBNull = false;
                this.columnurl.AllowDBNull = false;
                this.columnurl.MaxLength = 100;
                this.columntitle.AllowDBNull = false;
                this.columntitle.MaxLength = 2147483647;
                this.columnis_popular.AllowDBNull = false;
                this.columnprice_card_description.AllowDBNull = false;
                this.columnprice_card_description.MaxLength = 2147483647;
                this.columnmarketing_name.AllowDBNull = false;
                this.columnmarketing_name.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public speciesRow NewspeciesRow() {
                return ((speciesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new speciesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(speciesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.speciesRowChanged != null)) {
                    this.speciesRowChanged(this, new speciesRowChangeEvent(((speciesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.speciesRowChanging != null)) {
                    this.speciesRowChanging(this, new speciesRowChangeEvent(((speciesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.speciesRowDeleted != null)) {
                    this.speciesRowDeleted(this, new speciesRowChangeEvent(((speciesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.speciesRowDeleting != null)) {
                    this.speciesRowDeleting(this, new speciesRowChangeEvent(((speciesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespeciesRow(speciesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Species ds = new Species();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "speciesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class speciesRow : global::System.Data.DataRow {
            
            private speciesDataTable tablespecies;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal speciesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespecies = ((speciesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string species_code {
                get {
                    return ((string)(this[this.tablespecies.species_codeColumn]));
                }
                set {
                    this[this.tablespecies.species_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string species_description {
                get {
                    return ((string)(this[this.tablespecies.species_descriptionColumn]));
                }
                set {
                    this[this.tablespecies.species_descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string species_abbrev {
                get {
                    try {
                        return ((string)(this[this.tablespecies.species_abbrevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'species_abbrev\' in table \'species\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespecies.species_abbrevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int xtab_include {
                get {
                    return ((int)(this[this.tablespecies.xtab_includeColumn]));
                }
                set {
                    this[this.tablespecies.xtab_includeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double hardness {
                get {
                    return ((double)(this[this.tablespecies.hardnessColumn]));
                }
                set {
                    this[this.tablespecies.hardnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double mor {
                get {
                    return ((double)(this[this.tablespecies.morColumn]));
                }
                set {
                    this[this.tablespecies.morColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double moe {
                get {
                    return ((double)(this[this.tablespecies.moeColumn]));
                }
                set {
                    this[this.tablespecies.moeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double density {
                get {
                    return ((double)(this[this.tablespecies.densityColumn]));
                }
                set {
                    this[this.tablespecies.densityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string other_names {
                get {
                    return ((string)(this[this.tablespecies.other_namesColumn]));
                }
                set {
                    this[this.tablespecies.other_namesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int is_wood {
                get {
                    return ((int)(this[this.tablespecies.is_woodColumn]));
                }
                set {
                    this[this.tablespecies.is_woodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string web_desc {
                get {
                    return ((string)(this[this.tablespecies.web_descColumn]));
                }
                set {
                    this[this.tablespecies.web_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string photo_link {
                get {
                    return ((string)(this[this.tablespecies.photo_linkColumn]));
                }
                set {
                    this[this.tablespecies.photo_linkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double tang_shrink {
                get {
                    return ((double)(this[this.tablespecies.tang_shrinkColumn]));
                }
                set {
                    this[this.tablespecies.tang_shrinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double rad_shrink {
                get {
                    return ((double)(this[this.tablespecies.rad_shrinkColumn]));
                }
                set {
                    this[this.tablespecies.rad_shrinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FilterEntry_id {
                get {
                    return ((int)(this[this.tablespecies.FilterEntry_idColumn]));
                }
                set {
                    this[this.tablespecies.FilterEntry_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string about {
                get {
                    return ((string)(this[this.tablespecies.aboutColumn]));
                }
                set {
                    this[this.tablespecies.aboutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tree {
                get {
                    return ((string)(this[this.tablespecies.treeColumn]));
                }
                set {
                    this[this.tablespecies.treeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string color {
                get {
                    return ((string)(this[this.tablespecies.colorColumn]));
                }
                set {
                    this[this.tablespecies.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string texture {
                get {
                    return ((string)(this[this.tablespecies.textureColumn]));
                }
                set {
                    this[this.tablespecies.textureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string grain {
                get {
                    return ((string)(this[this.tablespecies.grainColumn]));
                }
                set {
                    this[this.tablespecies.grainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string luster {
                get {
                    return ((string)(this[this.tablespecies.lusterColumn]));
                }
                set {
                    this[this.tablespecies.lusterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string drying {
                get {
                    return ((string)(this[this.tablespecies.dryingColumn]));
                }
                set {
                    this[this.tablespecies.dryingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string working {
                get {
                    return ((string)(this[this.tablespecies.workingColumn]));
                }
                set {
                    this[this.tablespecies.workingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string durability {
                get {
                    return ((string)(this[this.tablespecies.durabilityColumn]));
                }
                set {
                    this[this.tablespecies.durabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string applications {
                get {
                    return ((string)(this[this.tablespecies.applicationsColumn]));
                }
                set {
                    this[this.tablespecies.applicationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string photosensitive {
                get {
                    return ((string)(this[this.tablespecies.photosensitiveColumn]));
                }
                set {
                    this[this.tablespecies.photosensitiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string distribution {
                get {
                    return ((string)(this[this.tablespecies.distributionColumn]));
                }
                set {
                    this[this.tablespecies.distributionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string family {
                get {
                    return ((string)(this[this.tablespecies.familyColumn]));
                }
                set {
                    this[this.tablespecies.familyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int prod_id {
                get {
                    return ((int)(this[this.tablespecies.prod_idColumn]));
                }
                set {
                    this[this.tablespecies.prod_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string url {
                get {
                    return ((string)(this[this.tablespecies.urlColumn]));
                }
                set {
                    this[this.tablespecies.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string title {
                get {
                    return ((string)(this[this.tablespecies.titleColumn]));
                }
                set {
                    this[this.tablespecies.titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int is_popular {
                get {
                    return ((int)(this[this.tablespecies.is_popularColumn]));
                }
                set {
                    this[this.tablespecies.is_popularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string price_card_description {
                get {
                    return ((string)(this[this.tablespecies.price_card_descriptionColumn]));
                }
                set {
                    this[this.tablespecies.price_card_descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string marketing_name {
                get {
                    return ((string)(this[this.tablespecies.marketing_nameColumn]));
                }
                set {
                    this[this.tablespecies.marketing_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isspecies_abbrevNull() {
                return this.IsNull(this.tablespecies.species_abbrevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setspecies_abbrevNull() {
                this[this.tablespecies.species_abbrevColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class speciesRowChangeEvent : global::System.EventArgs {
            
            private speciesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public speciesRowChangeEvent(speciesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public speciesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BusinessTier.DataAccessLayer.SpeciesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class speciesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public speciesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "species";
            tableMapping.ColumnMappings.Add("species_code", "species_code");
            tableMapping.ColumnMappings.Add("species_description", "species_description");
            tableMapping.ColumnMappings.Add("species_abbrev", "species_abbrev");
            tableMapping.ColumnMappings.Add("xtab_include", "xtab_include");
            tableMapping.ColumnMappings.Add("hardness", "hardness");
            tableMapping.ColumnMappings.Add("mor", "mor");
            tableMapping.ColumnMappings.Add("moe", "moe");
            tableMapping.ColumnMappings.Add("density", "density");
            tableMapping.ColumnMappings.Add("other_names", "other_names");
            tableMapping.ColumnMappings.Add("is_wood", "is_wood");
            tableMapping.ColumnMappings.Add("web_desc", "web_desc");
            tableMapping.ColumnMappings.Add("photo_link", "photo_link");
            tableMapping.ColumnMappings.Add("tang_shrink", "tang_shrink");
            tableMapping.ColumnMappings.Add("rad_shrink", "rad_shrink");
            tableMapping.ColumnMappings.Add("FilterEntry_id", "FilterEntry_id");
            tableMapping.ColumnMappings.Add("about", "about");
            tableMapping.ColumnMappings.Add("tree", "tree");
            tableMapping.ColumnMappings.Add("color", "color");
            tableMapping.ColumnMappings.Add("texture", "texture");
            tableMapping.ColumnMappings.Add("grain", "grain");
            tableMapping.ColumnMappings.Add("luster", "luster");
            tableMapping.ColumnMappings.Add("drying", "drying");
            tableMapping.ColumnMappings.Add("working", "working");
            tableMapping.ColumnMappings.Add("durability", "durability");
            tableMapping.ColumnMappings.Add("applications", "applications");
            tableMapping.ColumnMappings.Add("photosensitive", "photosensitive");
            tableMapping.ColumnMappings.Add("distribution", "distribution");
            tableMapping.ColumnMappings.Add("family", "family");
            tableMapping.ColumnMappings.Add("prod_id", "prod_id");
            tableMapping.ColumnMappings.Add("url", "url");
            tableMapping.ColumnMappings.Add("title", "title");
            tableMapping.ColumnMappings.Add("is_popular", "is_popular");
            tableMapping.ColumnMappings.Add("price_card_description", "price_card_description");
            tableMapping.ColumnMappings.Add("marketing_name", "marketing_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[species] WHERE (([species_code] = @Original_species_code) AND ([species_description] = @Original_species_description) AND ((@IsNull_species_abbrev = 1 AND [species_abbrev] IS NULL) OR ([species_abbrev] = @Original_species_abbrev)) AND ([xtab_include] = @Original_xtab_include) AND ([hardness] = @Original_hardness) AND ([mor] = @Original_mor) AND ([moe] = @Original_moe) AND ([density] = @Original_density) AND ([is_wood] = @Original_is_wood) AND ([photo_link] = @Original_photo_link) AND ([tang_shrink] = @Original_tang_shrink) AND ([rad_shrink] = @Original_rad_shrink) AND ([FilterEntry_id] = @Original_FilterEntry_id) AND ([family] = @Original_family) AND ([prod_id] = @Original_prod_id) AND ([url] = @Original_url) AND ([is_popular] = @Original_is_popular) AND ([marketing_name] = @Original_marketing_name))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_species_code", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_species_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_species_abbrev", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_abbrev", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_species_abbrev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_abbrev", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xtab_include", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xtab_include", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hardness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hardness", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_moe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "moe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_density", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "density", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_wood", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_wood", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_photo_link", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photo_link", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tang_shrink", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tang_shrink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rad_shrink", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rad_shrink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilterEntry_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterEntry_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_family", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "family", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_prod_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "prod_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_url", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "url", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_popular", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_popular", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_marketing_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "marketing_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[species] ([species_code], [species_description], [species_abbrev], [xtab_include], [hardness], [mor], [moe], [density], [other_names], [is_wood], [web_desc], [photo_link], [tang_shrink], [rad_shrink], [FilterEntry_id], [about], [tree], [color], [texture], [grain], [luster], [drying], [working], [durability], [applications], [photosensitive], [distribution], [family], [prod_id], [url], [title], [is_popular], [price_card_description], [marketing_name]) VALUES (@species_code, @species_description, @species_abbrev, @xtab_include, @hardness, @mor, @moe, @density, @other_names, @is_wood, @web_desc, @photo_link, @tang_shrink, @rad_shrink, @FilterEntry_id, @about, @tree, @color, @texture, @grain, @luster, @drying, @working, @durability, @applications, @photosensitive, @distribution, @family, @prod_id, @url, @title, @is_popular, @price_card_description, @marketing_name);
SELECT species_code, species_description, species_abbrev, xtab_include, hardness, mor, moe, density, other_names, is_wood, web_desc, photo_link, tang_shrink, rad_shrink, FilterEntry_id, about, tree, color, texture, grain, luster, drying, working, durability, applications, photosensitive, distribution, family, prod_id, url, title, is_popular, price_card_description, marketing_name FROM species WHERE (species_code = @species_code)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@species_code", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@species_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@species_abbrev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_abbrev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xtab_include", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xtab_include", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hardness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hardness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@moe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "moe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@density", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "density", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@other_names", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other_names", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_wood", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_wood", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@web_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "web_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@photo_link", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photo_link", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tang_shrink", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tang_shrink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rad_shrink", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rad_shrink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilterEntry_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterEntry_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@about", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "about", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@texture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "texture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@luster", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "luster", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drying", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drying", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@working", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "working", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@durability", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "durability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@applications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applications", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@photosensitive", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photosensitive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@distribution", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "distribution", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@family", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "family", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prod_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "prod_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@url", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "url", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_popular", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_popular", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@price_card_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "price_card_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@marketing_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "marketing_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[species] SET [species_code] = @species_code, [species_description] " +
                "= @species_description, [species_abbrev] = @species_abbrev, [xtab_include] = @xt" +
                "ab_include, [hardness] = @hardness, [mor] = @mor, [moe] = @moe, [density] = @den" +
                "sity, [other_names] = @other_names, [is_wood] = @is_wood, [web_desc] = @web_desc" +
                ", [photo_link] = @photo_link, [tang_shrink] = @tang_shrink, [rad_shrink] = @rad_" +
                "shrink, [FilterEntry_id] = @FilterEntry_id, [about] = @about, [tree] = @tree, [c" +
                "olor] = @color, [texture] = @texture, [grain] = @grain, [luster] = @luster, [dry" +
                "ing] = @drying, [working] = @working, [durability] = @durability, [applications]" +
                " = @applications, [photosensitive] = @photosensitive, [distribution] = @distribu" +
                "tion, [family] = @family, [prod_id] = @prod_id, [url] = @url, [title] = @title, " +
                "[is_popular] = @is_popular, [price_card_description] = @price_card_description, " +
                "[marketing_name] = @marketing_name WHERE (([species_code] = @Original_species_co" +
                "de) AND ([species_description] = @Original_species_description) AND ((@IsNull_sp" +
                "ecies_abbrev = 1 AND [species_abbrev] IS NULL) OR ([species_abbrev] = @Original_" +
                "species_abbrev)) AND ([xtab_include] = @Original_xtab_include) AND ([hardness] =" +
                " @Original_hardness) AND ([mor] = @Original_mor) AND ([moe] = @Original_moe) AND" +
                " ([density] = @Original_density) AND ([is_wood] = @Original_is_wood) AND ([photo" +
                "_link] = @Original_photo_link) AND ([tang_shrink] = @Original_tang_shrink) AND (" +
                "[rad_shrink] = @Original_rad_shrink) AND ([FilterEntry_id] = @Original_FilterEnt" +
                "ry_id) AND ([family] = @Original_family) AND ([prod_id] = @Original_prod_id) AND" +
                " ([url] = @Original_url) AND ([is_popular] = @Original_is_popular) AND ([marketi" +
                "ng_name] = @Original_marketing_name));\r\nSELECT species_code, species_description" +
                ", species_abbrev, xtab_include, hardness, mor, moe, density, other_names, is_woo" +
                "d, web_desc, photo_link, tang_shrink, rad_shrink, FilterEntry_id, about, tree, c" +
                "olor, texture, grain, luster, drying, working, durability, applications, photose" +
                "nsitive, distribution, family, prod_id, url, title, is_popular, price_card_descr" +
                "iption, marketing_name FROM species WHERE (species_code = @species_code)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@species_code", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@species_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@species_abbrev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_abbrev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xtab_include", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xtab_include", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hardness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hardness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@moe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "moe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@density", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "density", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@other_names", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other_names", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_wood", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_wood", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@web_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "web_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@photo_link", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photo_link", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tang_shrink", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tang_shrink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rad_shrink", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rad_shrink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FilterEntry_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterEntry_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@about", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "about", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@texture", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "texture", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@luster", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "luster", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drying", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drying", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@working", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "working", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@durability", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "durability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@applications", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applications", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@photosensitive", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photosensitive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@distribution", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "distribution", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@family", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "family", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prod_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "prod_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@url", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "url", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_popular", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_popular", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@price_card_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "price_card_description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@marketing_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "marketing_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_species_code", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_species_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_species_abbrev", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_abbrev", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_species_abbrev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "species_abbrev", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xtab_include", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xtab_include", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hardness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hardness", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_mor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_moe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "moe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_density", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "density", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_wood", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_wood", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_photo_link", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photo_link", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tang_shrink", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tang_shrink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rad_shrink", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rad_shrink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FilterEntry_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FilterEntry_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_family", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "family", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_prod_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "prod_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_url", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "url", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_popular", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_popular", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_marketing_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "marketing_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BusinessTier.Properties.Settings.Default.novaConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT species_code, species_description, species_abbrev, xtab_include, hardness, mor, moe, density, other_names, is_wood, web_desc, photo_link, tang_shrink, rad_shrink, FilterEntry_id, about, tree, color, texture, grain, luster, drying, working, durability, applications, photosensitive, distribution, family, prod_id, url, title, is_popular, price_card_description, marketing_name FROM dbo.species";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Species.speciesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Species.speciesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Species.speciesDataTable dataTable = new Species.speciesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Species.speciesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Species dataSet) {
            return this.Adapter.Update(dataSet, "species");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_species_code, 
                    string Original_species_description, 
                    string Original_species_abbrev, 
                    int Original_xtab_include, 
                    double Original_hardness, 
                    double Original_mor, 
                    double Original_moe, 
                    double Original_density, 
                    int Original_is_wood, 
                    string Original_photo_link, 
                    double Original_tang_shrink, 
                    double Original_rad_shrink, 
                    int Original_FilterEntry_id, 
                    string Original_family, 
                    int Original_prod_id, 
                    string Original_url, 
                    int Original_is_popular, 
                    string Original_marketing_name) {
            if ((Original_species_code == null)) {
                throw new global::System.ArgumentNullException("Original_species_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_species_code));
            }
            if ((Original_species_description == null)) {
                throw new global::System.ArgumentNullException("Original_species_description");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_species_description));
            }
            if ((Original_species_abbrev == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_species_abbrev));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_xtab_include));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_hardness));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_mor));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_moe));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_density));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_is_wood));
            if ((Original_photo_link == null)) {
                throw new global::System.ArgumentNullException("Original_photo_link");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_photo_link));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_tang_shrink));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_rad_shrink));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_FilterEntry_id));
            if ((Original_family == null)) {
                throw new global::System.ArgumentNullException("Original_family");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_family));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_prod_id));
            if ((Original_url == null)) {
                throw new global::System.ArgumentNullException("Original_url");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_url));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_is_popular));
            if ((Original_marketing_name == null)) {
                throw new global::System.ArgumentNullException("Original_marketing_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_marketing_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string species_code, 
                    string species_description, 
                    string species_abbrev, 
                    int xtab_include, 
                    double hardness, 
                    double mor, 
                    double moe, 
                    double density, 
                    string other_names, 
                    int is_wood, 
                    string web_desc, 
                    string photo_link, 
                    double tang_shrink, 
                    double rad_shrink, 
                    int FilterEntry_id, 
                    string about, 
                    string tree, 
                    string color, 
                    string texture, 
                    string grain, 
                    string luster, 
                    string drying, 
                    string working, 
                    string durability, 
                    string applications, 
                    string photosensitive, 
                    string distribution, 
                    string family, 
                    int prod_id, 
                    string url, 
                    string title, 
                    int is_popular, 
                    string price_card_description, 
                    string marketing_name) {
            if ((species_code == null)) {
                throw new global::System.ArgumentNullException("species_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(species_code));
            }
            if ((species_description == null)) {
                throw new global::System.ArgumentNullException("species_description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(species_description));
            }
            if ((species_abbrev == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(species_abbrev));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(xtab_include));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(hardness));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(mor));
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(moe));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(density));
            if ((other_names == null)) {
                throw new global::System.ArgumentNullException("other_names");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(other_names));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(is_wood));
            if ((web_desc == null)) {
                throw new global::System.ArgumentNullException("web_desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(web_desc));
            }
            if ((photo_link == null)) {
                throw new global::System.ArgumentNullException("photo_link");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(photo_link));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(tang_shrink));
            this.Adapter.InsertCommand.Parameters[13].Value = ((double)(rad_shrink));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(FilterEntry_id));
            if ((about == null)) {
                throw new global::System.ArgumentNullException("about");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(about));
            }
            if ((tree == null)) {
                throw new global::System.ArgumentNullException("tree");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(tree));
            }
            if ((color == null)) {
                throw new global::System.ArgumentNullException("color");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(color));
            }
            if ((texture == null)) {
                throw new global::System.ArgumentNullException("texture");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(texture));
            }
            if ((grain == null)) {
                throw new global::System.ArgumentNullException("grain");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(grain));
            }
            if ((luster == null)) {
                throw new global::System.ArgumentNullException("luster");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(luster));
            }
            if ((drying == null)) {
                throw new global::System.ArgumentNullException("drying");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(drying));
            }
            if ((working == null)) {
                throw new global::System.ArgumentNullException("working");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(working));
            }
            if ((durability == null)) {
                throw new global::System.ArgumentNullException("durability");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(durability));
            }
            if ((applications == null)) {
                throw new global::System.ArgumentNullException("applications");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(applications));
            }
            if ((photosensitive == null)) {
                throw new global::System.ArgumentNullException("photosensitive");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(photosensitive));
            }
            if ((distribution == null)) {
                throw new global::System.ArgumentNullException("distribution");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(distribution));
            }
            if ((family == null)) {
                throw new global::System.ArgumentNullException("family");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(family));
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((int)(prod_id));
            if ((url == null)) {
                throw new global::System.ArgumentNullException("url");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(url));
            }
            if ((title == null)) {
                throw new global::System.ArgumentNullException("title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(title));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((int)(is_popular));
            if ((price_card_description == null)) {
                throw new global::System.ArgumentNullException("price_card_description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(price_card_description));
            }
            if ((marketing_name == null)) {
                throw new global::System.ArgumentNullException("marketing_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(marketing_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string species_code, 
                    string species_description, 
                    string species_abbrev, 
                    int xtab_include, 
                    double hardness, 
                    double mor, 
                    double moe, 
                    double density, 
                    string other_names, 
                    int is_wood, 
                    string web_desc, 
                    string photo_link, 
                    double tang_shrink, 
                    double rad_shrink, 
                    int FilterEntry_id, 
                    string about, 
                    string tree, 
                    string color, 
                    string texture, 
                    string grain, 
                    string luster, 
                    string drying, 
                    string working, 
                    string durability, 
                    string applications, 
                    string photosensitive, 
                    string distribution, 
                    string family, 
                    int prod_id, 
                    string url, 
                    string title, 
                    int is_popular, 
                    string price_card_description, 
                    string marketing_name, 
                    string Original_species_code, 
                    string Original_species_description, 
                    string Original_species_abbrev, 
                    int Original_xtab_include, 
                    double Original_hardness, 
                    double Original_mor, 
                    double Original_moe, 
                    double Original_density, 
                    int Original_is_wood, 
                    string Original_photo_link, 
                    double Original_tang_shrink, 
                    double Original_rad_shrink, 
                    int Original_FilterEntry_id, 
                    string Original_family, 
                    int Original_prod_id, 
                    string Original_url, 
                    int Original_is_popular, 
                    string Original_marketing_name) {
            if ((species_code == null)) {
                throw new global::System.ArgumentNullException("species_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(species_code));
            }
            if ((species_description == null)) {
                throw new global::System.ArgumentNullException("species_description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(species_description));
            }
            if ((species_abbrev == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(species_abbrev));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(xtab_include));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(hardness));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(mor));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(moe));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(density));
            if ((other_names == null)) {
                throw new global::System.ArgumentNullException("other_names");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(other_names));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(is_wood));
            if ((web_desc == null)) {
                throw new global::System.ArgumentNullException("web_desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(web_desc));
            }
            if ((photo_link == null)) {
                throw new global::System.ArgumentNullException("photo_link");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(photo_link));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(tang_shrink));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(rad_shrink));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(FilterEntry_id));
            if ((about == null)) {
                throw new global::System.ArgumentNullException("about");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(about));
            }
            if ((tree == null)) {
                throw new global::System.ArgumentNullException("tree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(tree));
            }
            if ((color == null)) {
                throw new global::System.ArgumentNullException("color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(color));
            }
            if ((texture == null)) {
                throw new global::System.ArgumentNullException("texture");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(texture));
            }
            if ((grain == null)) {
                throw new global::System.ArgumentNullException("grain");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(grain));
            }
            if ((luster == null)) {
                throw new global::System.ArgumentNullException("luster");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(luster));
            }
            if ((drying == null)) {
                throw new global::System.ArgumentNullException("drying");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(drying));
            }
            if ((working == null)) {
                throw new global::System.ArgumentNullException("working");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(working));
            }
            if ((durability == null)) {
                throw new global::System.ArgumentNullException("durability");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(durability));
            }
            if ((applications == null)) {
                throw new global::System.ArgumentNullException("applications");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(applications));
            }
            if ((photosensitive == null)) {
                throw new global::System.ArgumentNullException("photosensitive");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(photosensitive));
            }
            if ((distribution == null)) {
                throw new global::System.ArgumentNullException("distribution");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(distribution));
            }
            if ((family == null)) {
                throw new global::System.ArgumentNullException("family");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(family));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(prod_id));
            if ((url == null)) {
                throw new global::System.ArgumentNullException("url");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(url));
            }
            if ((title == null)) {
                throw new global::System.ArgumentNullException("title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(title));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(is_popular));
            if ((price_card_description == null)) {
                throw new global::System.ArgumentNullException("price_card_description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(price_card_description));
            }
            if ((marketing_name == null)) {
                throw new global::System.ArgumentNullException("marketing_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(marketing_name));
            }
            if ((Original_species_code == null)) {
                throw new global::System.ArgumentNullException("Original_species_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_species_code));
            }
            if ((Original_species_description == null)) {
                throw new global::System.ArgumentNullException("Original_species_description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_species_description));
            }
            if ((Original_species_abbrev == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_species_abbrev));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_xtab_include));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(Original_hardness));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_mor));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Original_moe));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(Original_density));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_is_wood));
            if ((Original_photo_link == null)) {
                throw new global::System.ArgumentNullException("Original_photo_link");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_photo_link));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(Original_tang_shrink));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_rad_shrink));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_FilterEntry_id));
            if ((Original_family == null)) {
                throw new global::System.ArgumentNullException("Original_family");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_family));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_prod_id));
            if ((Original_url == null)) {
                throw new global::System.ArgumentNullException("Original_url");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_url));
            }
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_is_popular));
            if ((Original_marketing_name == null)) {
                throw new global::System.ArgumentNullException("Original_marketing_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_marketing_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string species_description, 
                    string species_abbrev, 
                    int xtab_include, 
                    double hardness, 
                    double mor, 
                    double moe, 
                    double density, 
                    string other_names, 
                    int is_wood, 
                    string web_desc, 
                    string photo_link, 
                    double tang_shrink, 
                    double rad_shrink, 
                    int FilterEntry_id, 
                    string about, 
                    string tree, 
                    string color, 
                    string texture, 
                    string grain, 
                    string luster, 
                    string drying, 
                    string working, 
                    string durability, 
                    string applications, 
                    string photosensitive, 
                    string distribution, 
                    string family, 
                    int prod_id, 
                    string url, 
                    string title, 
                    int is_popular, 
                    string price_card_description, 
                    string marketing_name, 
                    string Original_species_code, 
                    string Original_species_description, 
                    string Original_species_abbrev, 
                    int Original_xtab_include, 
                    double Original_hardness, 
                    double Original_mor, 
                    double Original_moe, 
                    double Original_density, 
                    int Original_is_wood, 
                    string Original_photo_link, 
                    double Original_tang_shrink, 
                    double Original_rad_shrink, 
                    int Original_FilterEntry_id, 
                    string Original_family, 
                    int Original_prod_id, 
                    string Original_url, 
                    int Original_is_popular, 
                    string Original_marketing_name) {
            return this.Update(Original_species_code, species_description, species_abbrev, xtab_include, hardness, mor, moe, density, other_names, is_wood, web_desc, photo_link, tang_shrink, rad_shrink, FilterEntry_id, about, tree, color, texture, grain, luster, drying, working, durability, applications, photosensitive, distribution, family, prod_id, url, title, is_popular, price_card_description, marketing_name, Original_species_code, Original_species_description, Original_species_abbrev, Original_xtab_include, Original_hardness, Original_mor, Original_moe, Original_density, Original_is_wood, Original_photo_link, Original_tang_shrink, Original_rad_shrink, Original_FilterEntry_id, Original_family, Original_prod_id, Original_url, Original_is_popular, Original_marketing_name);
        }
    }
}

#pragma warning restore 1591